
INSERT INTO Users (username, email, full_name, password) VALUES
('john_doe', 'john@example.com', 'John Doe', 'hashed_password1'),
('jane_smith', 'jane@example.com', 'Jane Smith', 'hashed_password2');


INSERT INTO Repositories (creator_id, repo_name, description, visibility) VALUES
(1, 'CodeManager', 'A GitHub-like platform', 'Public'),
(2, 'ML-Toolkit', 'A collection of ML algorithms', 'Private');


INSERT INTO Branches (repo_id, name, creator_id) VALUES
(1, 'main', 1),
(1, 'dev', 1),
(2, 'main', 2);


INSERT INTO Commits (branch_id, creator_id, commit_message) VALUES
(1, 1, 'Initial commit'),
(2, 1, 'Added new feature'),
(3, 2, 'First commit on main');


UPDATE Branches SET last_commit_id = 1, base_commit_id = 1 WHERE branch_id = 1;
UPDATE Branches SET last_commit_id = 2, base_commit_id = 1 WHERE branch_id = 2;
UPDATE Branches SET last_commit_id = 3, base_commit_id = 3 WHERE branch_id = 3;


INSERT INTO Files (commit_id, file_name, file_type, file_size, file_content) VALUES
(1, 'README.md', 'text', 1024, 'This is the README file'),
(2, 'main.py', 'python', 2048, 'print("Hello, World!")');


INSERT INTO Pull_Requests (creator_id, pr_title, pr_description, base_branch_id, target_branch_id) VALUES
(1, 'Feature Update', 'Added a new feature', 1, 2);


INSERT INTO Pull_Request_Reviews (pr_id, reviewer_id, review_comments) VALUES
(1, 2, 'Looks good to me!');


INSERT INTO Issues (repo_id, creator_id, issue_title, issue_description, assignee_id) VALUES
(1, 1, 'Bug in feature', 'Fix the issue in the feature branch', 2);

INSERT INTO Contributors (repo_id, user_id, role) VALUES
(1, 2, 'Contributor'),
(2, 1, 'Maintainer');

-------------------------------------------------------------------------------------------------------------------------------------------------------
layer 2
----------------------------------------------------------------------------------------------------------------------------------------------------




INSERT INTO Users (username, email, full_name, password) VALUES
('alice_wonder', 'alice@example.com', 'Alice Wonder', 'hashed_password3'),
('bob_builder', 'bob@example.com', 'Bob Builder', 'hashed_password4'),
('charlie_dev', 'charlie@example.com', 'Charlie Developer', 'hashed_password5');


INSERT INTO Repositories (creator_id, repo_name, description, visibility) VALUES
(3, 'DataScienceHub', 'Repository for data science projects', 'Public'),
(4, 'WebAppFramework', 'A lightweight web framework', 'Private');


INSERT INTO Branches (repo_id, name, creator_id) VALUES
(1, 'feature-x', 1),
(2, 'staging', 2),
(3, 'main', 3),
(3, 'dev', 3),
(4, 'main', 4),
(4, 'test', 4);


INSERT INTO Commits (branch_id, creator_id, commit_message) VALUES
(4, 1, 'Implemented feature X'),
(5, 2, 'Updated database schema'),
(6, 3, 'Refactored codebase'),
(7, 3, 'Improved ML model performance'),
(8, 4, 'Added authentication module');

UPDATE Branches SET last_commit_id = 4, base_commit_id = 1 WHERE branch_id = 4;
UPDATE Branches SET last_commit_id = 5, base_commit_id = 2 WHERE branch_id = 5;
UPDATE Branches SET last_commit_id = 6, base_commit_id = 3 WHERE branch_id = 6;
UPDATE Branches SET last_commit_id = 7, base_commit_id = 6 WHERE branch_id = 7;
UPDATE Branches SET last_commit_id = 8, base_commit_id = 7 WHERE branch_id = 8;


INSERT INTO Files (commit_id, file_name, file_type, file_size, file_content) VALUES
(3, 'index.html', 'html', 4096, '<html><body>Hello World</body></html>'),
(4, 'script.js', 'javascript', 2048, 'console.log("Hello, World!");'),
(5, 'app.css', 'css', 1024, 'body { font-size: 16px; }'),
(6, 'dataset.csv', 'csv', 8192, 'id,value\n1,100\n2,200'),
(7, 'model.py', 'python', 3072, 'import numpy as np\nprint("Model loaded")');


INSERT INTO Pull_Requests (creator_id, pr_title, pr_description, base_branch_id, target_branch_id) VALUES
(2, 'Fix Database Bug', 'Resolved a schema mismatch issue', 5, 6),
(3, 'Enhance ML Model', 'Improved accuracy by 5%', 6, 7),
(4, 'Security Patch', 'Fixed a major authentication vulnerability', 8, 6);


INSERT INTO Pull_Request_Reviews (pr_id, reviewer_id, review_comments) VALUES
(2, 1, 'Good fix, but please add more tests.'),
(3, 2, 'Well-structured update, approved.'),
(3, 4, 'Needs additional validation for edge cases.');


INSERT INTO Issues (repo_id, creator_id, issue_title, issue_description, assignee_id) VALUES
(1, 1, 'Performance Optimization', 'Refactor the function to run faster', 2),
(2, 2, 'UI Bug in Dashboard', 'Fix alignment issues in the UI', 3),
(3, 3, 'Incorrect Data Processing', 'ML model gives incorrect results', 4),
(4, 4, 'Security Risk in API', 'Potential SQL injection vulnerability', 1);


INSERT INTO Contributors (repo_id, user_id, role) VALUES
(1, 3, 'Maintainer'),
(2, 4, 'Developer'),
(3, 1, 'Reviewer'),
(4, 2, 'Admin');
